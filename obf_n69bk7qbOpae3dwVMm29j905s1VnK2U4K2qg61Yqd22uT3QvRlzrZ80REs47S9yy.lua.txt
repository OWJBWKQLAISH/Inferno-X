--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + (v44 % #v25), 1 + (v44 % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string.byte;
	local v10 = string.char;
	local v11 = string.sub;
	local v12 = string.gsub;
	local v13 = string.rep;
	local v14 = table.concat;
	local v15 = table.insert;
	local v16 = math.ldexp;
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table.unpack;
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (2 == v30) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (2 == v45) then
							if (v31 == 6) then
								local v46 = 0;
								while true do
									if (v46 == 1) then
										v43 = nil;
										v31 = 7;
										break;
									end
									if (v46 == 0) then
										v42 = nil;
										function v42()
											local v54 = 0;
											local v55;
											local v56;
											local v57;
											local v58;
											local v59;
											local v60;
											local v61;
											while true do
												if (1 == v54) then
													v57 = nil;
													v58 = nil;
													v54 = 2;
												end
												if (v54 == 2) then
													v59 = nil;
													v60 = nil;
													v54 = 3;
												end
												if (v54 == 3) then
													v61 = nil;
													while true do
														local v104 = 0;
														while true do
															if (0 == v104) then
																if (2 == v55) then
																	local v112 = 0;
																	while true do
																		if (v112 == 0) then
																			for v125 = 1, v60 do
																				local v126 = 0;
																				local v127;
																				local v128;
																				while true do
																					if (v126 == 1) then
																						if (v127 == 1) then
																							v128 = v35() ~= 0;
																						elseif (v127 == 2) then
																							v128 = v38();
																						elseif (v127 == 3) then
																							v128 = v39();
																						end
																						v61[v125] = v128;
																						break;
																					end
																					if (0 == v126) then
																						v127 = v35();
																						v128 = nil;
																						v126 = 1;
																					end
																				end
																			end
																			v59[930 - (214 + 713)] = v35();
																			v112 = 1;
																		end
																		if (v112 == 1) then
																			for v129 = 1 + 0, v37() do
																				local v130 = 0;
																				local v131;
																				local v132;
																				while true do
																					if (1 == v130) then
																						while true do
																							if (v131 == 0) then
																								v132 = v35();
																								if (v34(v132, 1, 1) == 0) then
																									local v160 = 0;
																									local v161;
																									local v162;
																									local v163;
																									while true do
																										if (v160 == 0) then
																											v161 = v34(v132, 1 + 1, 3);
																											v162 = v34(v132, 4, 6);
																											v160 = 1;
																										end
																										if (v160 == 2) then
																											if (v34(v162, 878 - (282 + 595), 1) == 1) then
																												v163[2] = v61[v163[2]];
																											end
																											if (v34(v162, 1639 - (1523 + 114), 2) == 1) then
																												v163[3] = v61[v163[3]];
																											end
																											v160 = 3;
																										end
																										if (v160 == 3) then
																											if (v34(v162, 3, 3) == 1) then
																												v163[4] = v61[v163[4]];
																											end
																											v56[v129] = v163;
																											break;
																										end
																										if (v160 == 1) then
																											v163 = {v36(),v36(),nil,nil};
																											if (v161 == 0) then
																												local v172 = 0;
																												local v173;
																												while true do
																													if (v172 == 0) then
																														v173 = 0;
																														while true do
																															if (v173 == 0) then
																																v163[3] = v36();
																																v163[4] = v36();
																																break;
																															end
																														end
																														break;
																													end
																												end
																											elseif (v161 == 1) then
																												v163[3] = v37();
																											elseif (v161 == 2) then
																												v163[3] = v37() - (2 ^ 16);
																											elseif (v161 == 3) then
																												local v180 = 0;
																												local v181;
																												while true do
																													if (v180 == 0) then
																														v181 = 0;
																														while true do
																															if (0 == v181) then
																																v163[3] = v37() - (2 ^ 16);
																																v163[4] = v36();
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											v160 = 2;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v130 == 0) then
																						v131 = 0;
																						v132 = nil;
																						v130 = 1;
																					end
																				end
																			end
																			v55 = 3;
																			break;
																		end
																	end
																end
																if (v55 == 1) then
																	local v113 = 0;
																	while true do
																		if (v113 == 1) then
																			v61 = {};
																			v55 = 2;
																			break;
																		end
																		if (v113 == 0) then
																			v59 = {v56,v57,nil,v58};
																			v60 = v37();
																			v113 = 1;
																		end
																	end
																end
																v104 = 1;
															end
															if (v104 == 1) then
																if (v55 == 3) then
																	local v114 = 0;
																	while true do
																		if (v114 == 0) then
																			for v133 = 1, v37() do
																				v57[v133 - 1] = v42();
																			end
																			return v59;
																		end
																	end
																end
																if (v55 == 0) then
																	local v115 = 0;
																	while true do
																		if (v115 == 1) then
																			v58 = {};
																			v55 = 1;
																			break;
																		end
																		if (v115 == 0) then
																			v56 = {};
																			v57 = {};
																			v115 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (0 == v54) then
													v55 = 0;
													v56 = nil;
													v54 = 1;
												end
											end
										end
										v46 = 1;
									end
								end
							end
							if (v31 == 7) then
								local v47 = 0;
								while true do
									if (0 == v47) then
										function v43(v62, v63, v64)
											local v65 = 0;
											local v66;
											local v67;
											local v68;
											local v69;
											while true do
												if (v65 == 2) then
													while true do
														local v105 = 0;
														while true do
															if (v105 == 0) then
																if (1 == v66) then
																	local v116 = 0;
																	while true do
																		if (v116 == 0) then
																			v69 = v62[3];
																			return function(...)
																				local v135 = 0;
																				local v136;
																				local v137;
																				local v138;
																				local v139;
																				local v140;
																				local v141;
																				local v142;
																				local v143;
																				local v144;
																				local v145;
																				local v146;
																				local v147;
																				local v148;
																				local v149;
																				while true do
																					if (v135 == 0) then
																						v136 = v67;
																						v137 = v68;
																						v138 = v69;
																						v135 = 1;
																					end
																					if (v135 == 2) then
																						v142 = {};
																						v143 = {...};
																						v144 = v20("#", ...) - 1;
																						v135 = 3;
																					end
																					if (v135 == 1) then
																						v139 = v41;
																						v140 = 1;
																						v141 = -1;
																						v135 = 2;
																					end
																					if (v135 == 3) then
																						v145 = {};
																						v146 = {};
																						for v152 = 0 + 0, v144 do
																							if (v152 >= v138) then
																								v142[v152 - v138] = v143[v152 + 1];
																							else
																								v146[v152] = v143[v152 + 1];
																							end
																						end
																						v135 = 4;
																					end
																					if (v135 == 4) then
																						v147 = (v144 - v138) + (1 - 0);
																						v148 = nil;
																						v149 = nil;
																						v135 = 5;
																					end
																					if (5 == v135) then
																						while true do
																							local v153 = 0;
																							local v154;
																							while true do
																								if (v153 == 0) then
																									v154 = 0;
																									while true do
																										if (v154 == 0) then
																											local v164 = 0;
																											while true do
																												if (v164 == 1) then
																													v154 = 1;
																													break;
																												end
																												if (v164 == 0) then
																													v148 = v136[v140];
																													v149 = v148[1];
																													v164 = 1;
																												end
																											end
																										end
																										if (v154 == 1) then
																											if (v149 <= 68) then
																												if (v149 <= 33) then
																													if (v149 <= 16) then
																														if (v149 <= 7) then
																															if (v149 <= 3) then
																																if (v149 <= 1) then
																																	if (v149 > 0) then
																																		v63[v148[3]] = v146[v148[2]];
																																	else
																																		v146[v148[2]] = v146[v148[3]] - v148[4];
																																	end
																																elseif (v149 == 2) then
																																	local v185 = 0;
																																	local v186;
																																	local v187;
																																	while true do
																																		if (v185 == 0) then
																																			v186 = 0;
																																			v187 = nil;
																																			v185 = 1;
																																		end
																																		if (v185 == 1) then
																																			while true do
																																				if (v186 == 0) then
																																					v187 = v148[2];
																																					do
																																						return v146[v187](v21(v146, v187 + 1, v148[3]));
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																else
																																	v146[v148[2]]();
																																end
																															elseif (v149 <= 5) then
																																if (v149 == 4) then
																																	local v188 = 0;
																																	local v189;
																																	while true do
																																		if (v188 == 0) then
																																			v189 = v148[2];
																																			v146[v189](v21(v146, v189 + 1, v148[3]));
																																			break;
																																		end
																																	end
																																elseif (v146[v148[1067 - (68 + 997)]] ~= v148[4]) then
																																	v140 = v140 + 1;
																																else
																																	v140 = v148[3];
																																end
																															elseif (v149 == 6) then
																																local v190 = 0;
																																local v191;
																																local v192;
																																local v193;
																																while true do
																																	if (v190 == 0) then
																																		v191 = 0;
																																		v192 = nil;
																																		v190 = 1;
																																	end
																																	if (v190 == 1) then
																																		v193 = nil;
																																		while true do
																																			if (v191 == 0) then
																																				local v553 = 0;
																																				while true do
																																					if (v553 == 1) then
																																						v191 = 1;
																																						break;
																																					end
																																					if (0 == v553) then
																																						v192 = v148[2];
																																						v193 = v146[v148[3]];
																																						v553 = 1;
																																					end
																																				end
																																			end
																																			if (v191 == 1) then
																																				v146[v192 + 1] = v193;
																																				v146[v192] = v193[v148[4]];
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															else
																																local v194 = 0;
																																local v195;
																																local v196;
																																while true do
																																	if (1 == v194) then
																																		while true do
																																			if (v195 == 0) then
																																				v196 = v148[2];
																																				v146[v196](v21(v146, v196 + 1, v141));
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																	if (v194 == 0) then
																																		v195 = 0;
																																		v196 = nil;
																																		v194 = 1;
																																	end
																																end
																															end
																														elseif (v149 <= 11) then
																															if (v149 <= 9) then
																																if (v149 == 8) then
																																	v146[v148[2]] = v148[3] ~= 0;
																																elseif (v146[v148[2]] ~= v146[v148[4]]) then
																																	v140 = v140 + (1271 - (226 + 1044));
																																else
																																	v140 = v148[3];
																																end
																															elseif (v149 > 10) then
																																local v198 = 0;
																																local v199;
																																local v200;
																																while true do
																																	if (v198 == 0) then
																																		v199 = 0;
																																		v200 = nil;
																																		v198 = 1;
																																	end
																																	if (v198 == 1) then
																																		while true do
																																			if (v199 == 0) then
																																				v200 = v148[2];
																																				v146[v200](v146[v200 + 1]);
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															else
																																v146[v148[2]] = v148[3] + v146[v148[4]];
																															end
																														elseif (v149 <= (56 - 43)) then
																															if (v149 == (129 - (32 + 85))) then
																																if (v146[v148[2]] == v146[v148[4]]) then
																																	v140 = v140 + 1;
																																else
																																	v140 = v148[3];
																																end
																															else
																																v146[v148[2]] = v146[v148[3]] + v148[4];
																															end
																														elseif (v149 <= (14 + 0)) then
																															v146[v148[2]] = v148[3] + v146[v148[4]];
																														elseif (v149 > 15) then
																															v140 = v148[1 + 2];
																														else
																															v146[v148[959 - (892 + 65)]] = v63[v148[3]];
																														end
																													elseif (v149 <= 24) then
																														if (v149 <= 20) then
																															if (v149 <= 18) then
																																if (v149 > 17) then
																																	if (v148[2] == v146[v148[4]]) then
																																		v140 = v140 + 1;
																																	else
																																		v140 = v148[3];
																																	end
																																else
																																	local v204 = 0;
																																	local v205;
																																	local v206;
																																	local v207;
																																	while true do
																																		if (v204 == 0) then
																																			v205 = 0;
																																			v206 = nil;
																																			v204 = 1;
																																		end
																																		if (v204 == 1) then
																																			v207 = nil;
																																			while true do
																																				if (v205 == 1) then
																																					for v604 = v206 + 1, v141 do
																																						v15(v207, v146[v604]);
																																					end
																																					break;
																																				end
																																				if (0 == v205) then
																																					local v559 = 0;
																																					while true do
																																						if (v559 == 1) then
																																							v205 = 1;
																																							break;
																																						end
																																						if (v559 == 0) then
																																							v206 = v148[2];
																																							v207 = v146[v206];
																																							v559 = 1;
																																						end
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																															elseif (v149 == 19) then
																																v146[v148[2]][v146[v148[3]]] = v148[9 - 5];
																															else
																																local v210 = 0;
																																local v211;
																																local v212;
																																local v213;
																																while true do
																																	if (v210 == 0) then
																																		v211 = 0;
																																		v212 = nil;
																																		v210 = 1;
																																	end
																																	if (v210 == 1) then
																																		v213 = nil;
																																		while true do
																																			if (v211 == 1) then
																																				v146[v212 + 1] = v213;
																																				v146[v212] = v213[v148[4]];
																																				break;
																																			end
																																			if (v211 == 0) then
																																				local v563 = 0;
																																				while true do
																																					if (v563 == 1) then
																																						v211 = 1;
																																						break;
																																					end
																																					if (v563 == 0) then
																																						v212 = v148[2];
																																						v213 = v146[v148[5 - 2]];
																																						v563 = 1;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																														elseif (v149 <= 22) then
																															if (v149 > (38 - 17)) then
																																v146[v148[2]] = #v146[v148[3]];
																															elseif (v146[v148[2]] <= v146[v148[4]]) then
																																v140 = v140 + 1;
																															else
																																v140 = v148[3];
																															end
																														elseif (v149 > 23) then
																															local v215 = 0;
																															local v216;
																															local v217;
																															local v218;
																															local v219;
																															while true do
																																if (v215 == 0) then
																																	v216 = 0;
																																	v217 = nil;
																																	v215 = 1;
																																end
																																if (v215 == 2) then
																																	while true do
																																		if (v216 == 0) then
																																			local v564 = 0;
																																			while true do
																																				if (v564 == 1) then
																																					v216 = 1;
																																					break;
																																				end
																																				if (v564 == 0) then
																																					v217 = v148[2];
																																					v218 = v146[v217];
																																					v564 = 1;
																																				end
																																			end
																																		end
																																		if (v216 == 1) then
																																			v219 = v146[v217 + 2];
																																			if (v219 > 0) then
																																				if (v218 > v146[v217 + 1]) then
																																					v140 = v148[3];
																																				else
																																					v146[v217 + 3] = v218;
																																				end
																																			elseif (v218 < v146[v217 + 1]) then
																																				v140 = v148[3];
																																			else
																																				v146[v217 + 3] = v218;
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v215 == 1) then
																																	v218 = nil;
																																	v219 = nil;
																																	v215 = 2;
																																end
																															end
																														else
																															local v220 = 0;
																															local v221;
																															local v222;
																															local v223;
																															while true do
																																if (1 == v220) then
																																	v223 = v146[v221 + (182 - (67 + 113))];
																																	if (v223 > 0) then
																																		if (v222 > v146[v221 + 1]) then
																																			v140 = v148[3];
																																		else
																																			v146[v221 + 3] = v222;
																																		end
																																	elseif (v222 < v146[v221 + 1]) then
																																		v140 = v148[3];
																																	else
																																		v146[v221 + 3] = v222;
																																	end
																																	break;
																																end
																																if (v220 == 0) then
																																	v221 = v148[352 - (87 + 263)];
																																	v222 = v146[v221];
																																	v220 = 1;
																																end
																															end
																														end
																													elseif (v149 <= 28) then
																														if (v149 <= 26) then
																															if (v149 > 25) then
																																v146[v148[2]] = v146[v148[3]][v146[v148[4]]];
																															else
																																v146[v148[2]] = v146[v148[3 + 0]] % v146[v148[4]];
																															end
																														elseif (v149 > 27) then
																															local v227 = 0;
																															local v228;
																															local v229;
																															local v230;
																															local v231;
																															while true do
																																if (v227 == 0) then
																																	v228 = 0;
																																	v229 = nil;
																																	v227 = 1;
																																end
																																if (2 == v227) then
																																	while true do
																																		if (v228 == 0) then
																																			local v566 = 0;
																																			while true do
																																				if (v566 == 1) then
																																					v228 = 1;
																																					break;
																																				end
																																				if (0 == v566) then
																																					v229 = v137[v148[7 - 4]];
																																					v230 = nil;
																																					v566 = 1;
																																				end
																																			end
																																		end
																																		if (v228 == 2) then
																																			for v609 = 1, v148[4] do
																																				local v610 = 0;
																																				local v611;
																																				local v612;
																																				while true do
																																					if (1 == v610) then
																																						while true do
																																							if (v611 == 0) then
																																								local v739 = 0;
																																								while true do
																																									if (1 == v739) then
																																										v611 = 1;
																																										break;
																																									end
																																									if (0 == v739) then
																																										v140 = v140 + 1;
																																										v612 = v136[v140];
																																										v739 = 1;
																																									end
																																								end
																																							end
																																							if (v611 == 1) then
																																								if (v612[1 + 0] == 119) then
																																									v231[v609 - 1] = {v146,v612[3]};
																																								else
																																									v231[v609 - 1] = {v63,v612[3]};
																																								end
																																								v145[#v145 + 1] = v231;
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (0 == v610) then
																																						v611 = 0;
																																						v612 = nil;
																																						v610 = 1;
																																					end
																																				end
																																			end
																																			v146[v148[2]] = v43(v229, v230, v64);
																																			break;
																																		end
																																		if (v228 == 1) then
																																			local v568 = 0;
																																			while true do
																																				if (0 == v568) then
																																					v231 = {};
																																					v230 = v18({}, {[v7("\123\117\199\123\52\65\82", "\80\36\42\174\21")]=function(v696, v697)
																																						local v698 = 0;
																																						local v699;
																																						while true do
																																							if (v698 == 0) then
																																								v699 = v231[v697];
																																								return v699[1][v699[2]];
																																							end
																																						end
																																					end,[v7("\113\47\57\127\89\25\57\126\75\8", "\26\46\112\87")]=function(v700, v701, v702)
																																						local v703 = 0;
																																						local v704;
																																						while true do
																																							if (v703 == 0) then
																																								v704 = v231[v701];
																																								v704[1][v704[2]] = v702;
																																								break;
																																							end
																																						end
																																					end});
																																					v568 = 1;
																																				end
																																				if (v568 == 1) then
																																					v228 = 2;
																																					break;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v227 == 1) then
																																	v230 = nil;
																																	v231 = nil;
																																	v227 = 2;
																																end
																															end
																														else
																															local v232 = 0;
																															local v233;
																															local v234;
																															local v235;
																															local v236;
																															while true do
																																if (v232 == 1) then
																																	v235 = nil;
																																	v236 = nil;
																																	v232 = 2;
																																end
																																if (v232 == 0) then
																																	v233 = 0;
																																	v234 = nil;
																																	v232 = 1;
																																end
																																if (v232 == 2) then
																																	while true do
																																		if (v233 == 1) then
																																			v236 = 0;
																																			for v613 = v234, v148[4] do
																																				local v614 = 0;
																																				while true do
																																					if (0 == v614) then
																																						v236 = v236 + 1;
																																						v146[v613] = v235[v236];
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																		if (v233 == 0) then
																																			local v569 = 0;
																																			while true do
																																				if (v569 == 0) then
																																					v234 = v148[2];
																																					v235 = {v146[v234](v21(v146, v234 + 1, v148[3]))};
																																					v569 = 1;
																																				end
																																				if (v569 == 1) then
																																					v233 = 1;
																																					break;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 <= 30) then
																														if (v149 > 29) then
																															if v146[v148[5 - 3]] then
																																v140 = v140 + 1;
																															else
																																v140 = v148[3];
																															end
																														else
																															v64[v148[3]] = v146[v148[2]];
																														end
																													elseif (v149 <= 31) then
																														local v239 = 0;
																														local v240;
																														local v241;
																														while true do
																															if (v239 == 1) then
																																while true do
																																	if (0 == v240) then
																																		v241 = v148[2];
																																		v146[v241] = v146[v241]();
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v239 == 0) then
																																v240 = 0;
																																v241 = nil;
																																v239 = 1;
																															end
																														end
																													elseif (v149 > (57 - 25)) then
																														local v431 = 0;
																														local v432;
																														while true do
																															if (v431 == 0) then
																																v432 = v148[2];
																																v146[v432](v21(v146, v432 + 1, v141));
																																break;
																															end
																														end
																													elseif not v146[v148[2]] then
																														v140 = v140 + 1 + 0;
																													else
																														v140 = v148[3];
																													end
																												elseif (v149 <= 50) then
																													if (v149 <= 41) then
																														if (v149 <= 37) then
																															if (v149 <= 35) then
																																if (v149 == (1031 - (915 + 82))) then
																																	do
																																		return;
																																	end
																																else
																																	v146[v148[2]] = v146[v148[3]][v148[4]];
																																end
																															elseif (v149 == 36) then
																																if v146[v148[2]] then
																																	v140 = v140 + 1;
																																else
																																	v140 = v148[3];
																																end
																															else
																																v64[v148[3]] = v146[v148[2]];
																															end
																														elseif (v149 <= 39) then
																															if (v149 > 38) then
																																local v246 = 0;
																																local v247;
																																local v248;
																																while true do
																																	if (v246 == 1) then
																																		while true do
																																			if (v247 == 0) then
																																				v248 = v146[v148[4]];
																																				if v248 then
																																					v140 = v140 + 1;
																																				else
																																					local v636 = 0;
																																					local v637;
																																					while true do
																																						if (v636 == 0) then
																																							v637 = 0;
																																							while true do
																																								if (v637 == 0) then
																																									v146[v148[2]] = v248;
																																									v140 = v148[3];
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																	if (v246 == 0) then
																																		v247 = 0;
																																		v248 = nil;
																																		v246 = 1;
																																	end
																																end
																															else
																																local v249 = 0;
																																local v250;
																																local v251;
																																local v252;
																																while true do
																																	if (v249 == 0) then
																																		v250 = v148[2];
																																		v251 = {v146[v250](v146[v250 + 1])};
																																		v249 = 1;
																																	end
																																	if (v249 == 1) then
																																		v252 = 0;
																																		for v519 = v250, v148[4] do
																																			local v520 = 0;
																																			local v521;
																																			while true do
																																				if (v520 == 0) then
																																					v521 = 0;
																																					while true do
																																						if (0 == v521) then
																																							v252 = v252 + (2 - 1);
																																							v146[v519] = v251[v252];
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																														elseif (v149 == 40) then
																															v146[v148[2]] = v146[v148[3]];
																														else
																															local v255 = 0;
																															local v256;
																															local v257;
																															local v258;
																															while true do
																																if (v255 == 1) then
																																	v258 = nil;
																																	while true do
																																		if (v256 == 1) then
																																			for v615 = 1, #v145 do
																																				local v616 = 0;
																																				local v617;
																																				local v618;
																																				while true do
																																					if (0 == v616) then
																																						v617 = 0;
																																						v618 = nil;
																																						v616 = 1;
																																					end
																																					if (1 == v616) then
																																						while true do
																																							if (v617 == 0) then
																																								v618 = v145[v615];
																																								for v762 = 0, #v618 do
																																									local v763 = 0;
																																									local v764;
																																									local v765;
																																									local v766;
																																									while true do
																																										if (1 == v763) then
																																											v766 = v764[2];
																																											if ((v765 == v146) and (v766 >= v257)) then
																																												local v796 = 0;
																																												while true do
																																													if (v796 == 0) then
																																														v258[v766] = v765[v766];
																																														v764[1] = v258;
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v763 == 0) then
																																											v764 = v618[v762];
																																											v765 = v764[1];
																																											v763 = 1;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																		if (v256 == 0) then
																																			local v573 = 0;
																																			while true do
																																				if (v573 == 1) then
																																					v256 = 1;
																																					break;
																																				end
																																				if (v573 == 0) then
																																					v257 = v148[2];
																																					v258 = {};
																																					v573 = 1;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v255 == 0) then
																																	v256 = 0;
																																	v257 = nil;
																																	v255 = 1;
																																end
																															end
																														end
																													elseif (v149 <= 45) then
																														if (v149 <= 43) then
																															if (v149 == 42) then
																																if (v146[v148[2]] <= v148[4]) then
																																	v140 = v140 + 1;
																																else
																																	v140 = v148[3];
																																end
																															else
																																v146[v148[2]] = v146[v148[3]][v148[4]];
																															end
																														elseif (v149 == 44) then
																															local v261 = 0;
																															local v262;
																															local v263;
																															while true do
																																if (v261 == 1) then
																																	while true do
																																		if (v262 == 0) then
																																			v263 = v148[2];
																																			do
																																				return v21(v146, v263, v141);
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v261 == 0) then
																																	v262 = 0;
																																	v263 = nil;
																																	v261 = 1;
																																end
																															end
																														elseif (v148[2] < v146[v148[4]]) then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													elseif (v149 <= 47) then
																														if (v149 > 46) then
																															v146[v148[2]][v146[v148[3]]] = v146[v148[3 + 1]];
																														else
																															local v266 = 0;
																															local v267;
																															local v268;
																															local v269;
																															local v270;
																															local v271;
																															while true do
																																if (1 == v266) then
																																	v269 = nil;
																																	v270 = nil;
																																	v266 = 2;
																																end
																																if (v266 == 2) then
																																	v271 = nil;
																																	while true do
																																		if (2 == v267) then
																																			for v619 = v268, v141 do
																																				local v620 = 0;
																																				local v621;
																																				while true do
																																					if (v620 == 0) then
																																						v621 = 0;
																																						while true do
																																							if (v621 == 0) then
																																								v271 = v271 + 1;
																																								v146[v619] = v269[v271];
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																		if (v267 == 1) then
																																			local v575 = 0;
																																			while true do
																																				if (v575 == 1) then
																																					v267 = 2;
																																					break;
																																				end
																																				if (v575 == 0) then
																																					v141 = (v270 + v268) - 1;
																																					v271 = 0;
																																					v575 = 1;
																																				end
																																			end
																																		end
																																		if (v267 == 0) then
																																			local v576 = 0;
																																			while true do
																																				if (v576 == 1) then
																																					v267 = 1;
																																					break;
																																				end
																																				if (0 == v576) then
																																					v268 = v148[2 - 0];
																																					v269, v270 = v139(v146[v268](v21(v146, v268 + 1, v141)));
																																					v576 = 1;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v266 == 0) then
																																	v267 = 0;
																																	v268 = nil;
																																	v266 = 1;
																																end
																															end
																														end
																													elseif (v149 <= (1235 - (1069 + 118))) then
																														local v272 = 0;
																														local v273;
																														local v274;
																														local v275;
																														local v276;
																														local v277;
																														while true do
																															if (v272 == 3) then
																																if v277 then
																																	local v546 = 0;
																																	while true do
																																		if (v546 == 0) then
																																			v146[v275] = v277;
																																			v140 = v148[3];
																																			break;
																																		end
																																	end
																																else
																																	v140 = v140 + 1;
																																end
																																break;
																															end
																															if (v272 == 1) then
																																v275 = v273 + 2;
																																v276 = {v146[v273](v146[v273 + 1], v146[v275])};
																																v272 = 2;
																															end
																															if (v272 == 2) then
																																for v522 = 1, v274 do
																																	v146[v275 + v522] = v276[v522];
																																end
																																v277 = v276[1];
																																v272 = 3;
																															end
																															if (v272 == 0) then
																																v273 = v148[2];
																																v274 = v148[4];
																																v272 = 1;
																															end
																														end
																													elseif (v149 > 49) then
																														v146[v148[2]] = v146[v148[3]] + v146[v148[4]];
																													else
																														local v437 = 0;
																														local v438;
																														local v439;
																														local v440;
																														local v441;
																														while true do
																															if (v437 == 2) then
																																while true do
																																	if (1 == v438) then
																																		local v640 = 0;
																																		while true do
																																			if (v640 == 0) then
																																				v441 = {};
																																				v440 = v18({}, {[v7("\134\28\162\122\187\186\93", "\212\217\67\203\20\223\223\37")]=function(v728, v729)
																																					local v730 = 0;
																																					local v731;
																																					while true do
																																						if (0 == v730) then
																																							v731 = v441[v729];
																																							return v731[1][v731[2]];
																																						end
																																					end
																																				end,[v7("\133\178\166\215\173\132\166\214\191\149", "\178\218\237\200")]=function(v732, v733, v734)
																																					local v735 = 0;
																																					local v736;
																																					local v737;
																																					while true do
																																						if (v735 == 0) then
																																							v736 = 0;
																																							v737 = nil;
																																							v735 = 1;
																																						end
																																						if (1 == v735) then
																																							while true do
																																								if (v736 == 0) then
																																									v737 = v441[v733];
																																									v737[1 - 0][v737[2]] = v734;
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end});
																																				v640 = 1;
																																			end
																																			if (v640 == 1) then
																																				v438 = 2;
																																				break;
																																			end
																																		end
																																	end
																																	if (v438 == 0) then
																																		local v641 = 0;
																																		while true do
																																			if (v641 == 1) then
																																				v438 = 1;
																																				break;
																																			end
																																			if (v641 == 0) then
																																				v439 = v137[v148[3]];
																																				v440 = nil;
																																				v641 = 1;
																																			end
																																		end
																																	end
																																	if (v438 == 2) then
																																		for v661 = 1, v148[4] do
																																			local v662 = 0;
																																			local v663;
																																			local v664;
																																			while true do
																																				if (v662 == 1) then
																																					while true do
																																						if (v663 == 0) then
																																							local v770 = 0;
																																							while true do
																																								if (0 == v770) then
																																									v140 = v140 + 1;
																																									v664 = v136[v140];
																																									v770 = 1;
																																								end
																																								if (v770 == 1) then
																																									v663 = 1;
																																									break;
																																								end
																																							end
																																						end
																																						if (v663 == 1) then
																																							if (v664[1] == 119) then
																																								v441[v661 - 1] = {v146,v664[1 + 2]};
																																							else
																																								v441[v661 - 1] = {v63,v664[3]};
																																							end
																																							v145[#v145 + 1] = v441;
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																				if (v662 == 0) then
																																					v663 = 0;
																																					v664 = nil;
																																					v662 = 1;
																																				end
																																			end
																																		end
																																		v146[v148[2]] = v43(v439, v440, v64);
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v437 == 0) then
																																v438 = 0;
																																v439 = nil;
																																v437 = 1;
																															end
																															if (v437 == 1) then
																																v440 = nil;
																																v441 = nil;
																																v437 = 2;
																															end
																														end
																													end
																												elseif (v149 <= 59) then
																													if (v149 <= 54) then
																														if (v149 <= 52) then
																															if (v149 == 51) then
																																v146[v148[2]] = v43(v137[v148[3]], nil, v64);
																															else
																																v146[v148[2]][v148[3]] = v146[v148[4]];
																															end
																														elseif (v149 > 53) then
																															v146[v148[2 + 0]] = v146[v148[3]] + v146[v148[4]];
																														else
																															local v282 = 0;
																															local v283;
																															while true do
																																if (v282 == 0) then
																																	v283 = v148[2];
																																	v146[v283] = v146[v283](v21(v146, v283 + 1, v141));
																																	break;
																																end
																															end
																														end
																													elseif (v149 <= 56) then
																														if (v149 == 55) then
																															do
																																return v146[v148[793 - (368 + 423)]];
																															end
																														else
																															local v284 = 0;
																															local v285;
																															local v286;
																															while true do
																																if (v284 == 0) then
																																	v285 = 0;
																																	v286 = nil;
																																	v284 = 1;
																																end
																																if (v284 == 1) then
																																	while true do
																																		if (v285 == 0) then
																																			v286 = v146[v148[12 - 8]];
																																			if v286 then
																																				v140 = v140 + 1;
																																			else
																																				local v643 = 0;
																																				while true do
																																					if (v643 == 0) then
																																						v146[v148[2]] = v286;
																																						v140 = v148[3];
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 <= 57) then
																														v146[v148[2]] = v64[v148[3]];
																													elseif (v149 == (76 - (10 + 8))) then
																														do
																															return v146[v148[2]];
																														end
																													else
																														v146[v148[2]][v148[3]] = v148[4];
																													end
																												elseif (v149 <= 63) then
																													if (v149 <= 61) then
																														if (v149 == 60) then
																															local v289 = 0;
																															local v290;
																															local v291;
																															local v292;
																															local v293;
																															local v294;
																															while true do
																																if (v289 == 2) then
																																	v294 = nil;
																																	while true do
																																		if (0 == v290) then
																																			local v578 = 0;
																																			while true do
																																				if (v578 == 1) then
																																					v290 = 1;
																																					break;
																																				end
																																				if (0 == v578) then
																																					v291 = v148[2];
																																					v292, v293 = v139(v146[v291](v21(v146, v291 + 1, v141)));
																																					v578 = 1;
																																				end
																																			end
																																		end
																																		if (v290 == 1) then
																																			local v579 = 0;
																																			while true do
																																				if (v579 == 0) then
																																					v141 = (v293 + v291) - (3 - 2);
																																					v294 = 0;
																																					v579 = 1;
																																				end
																																				if (v579 == 1) then
																																					v290 = 2;
																																					break;
																																				end
																																			end
																																		end
																																		if (v290 == 2) then
																																			for v622 = v291, v141 do
																																				local v623 = 0;
																																				while true do
																																					if (0 == v623) then
																																						v294 = v294 + 1;
																																						v146[v622] = v292[v294];
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v289 == 0) then
																																	v290 = 0;
																																	v291 = nil;
																																	v289 = 1;
																																end
																																if (v289 == 1) then
																																	v292 = nil;
																																	v293 = nil;
																																	v289 = 2;
																																end
																															end
																														else
																															v146[v148[2]] = #v146[v148[445 - (416 + 26)]];
																														end
																													elseif (v149 == (197 - 135)) then
																														local v296 = 0;
																														local v297;
																														local v298;
																														local v299;
																														local v300;
																														local v301;
																														while true do
																															if (v296 == 2) then
																																v301 = nil;
																																while true do
																																	if (v297 == 0) then
																																		local v580 = 0;
																																		while true do
																																			if (v580 == 1) then
																																				v297 = 1;
																																				break;
																																			end
																																			if (v580 == 0) then
																																				v298 = v148[2];
																																				v299, v300 = v139(v146[v298](v21(v146, v298 + 1, v148[3])));
																																				v580 = 1;
																																			end
																																		end
																																	end
																																	if (v297 == 1) then
																																		local v581 = 0;
																																		while true do
																																			if (v581 == 1) then
																																				v297 = 2;
																																				break;
																																			end
																																			if (0 == v581) then
																																				v141 = (v300 + v298) - 1;
																																				v301 = 0;
																																				v581 = 1;
																																			end
																																		end
																																	end
																																	if (2 == v297) then
																																		for v624 = v298, v141 do
																																			local v625 = 0;
																																			local v626;
																																			while true do
																																				if (v625 == 0) then
																																					v626 = 0;
																																					while true do
																																						if (v626 == 0) then
																																							v301 = v301 + 1;
																																							v146[v624] = v299[v301];
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v296 == 1) then
																																v299 = nil;
																																v300 = nil;
																																v296 = 2;
																															end
																															if (v296 == 0) then
																																v297 = 0;
																																v298 = nil;
																																v296 = 1;
																															end
																														end
																													elseif (v146[v148[2]] <= v148[4]) then
																														v140 = v140 + 1 + 0;
																													else
																														v140 = v148[3];
																													end
																												elseif (v149 <= 65) then
																													if (v149 == 64) then
																														if (v146[v148[2]] < v146[v148[4]]) then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													else
																														v146[v148[2]] = v146[v148[3]] - v148[4];
																													end
																												elseif (v149 <= 66) then
																													v146[v148[2]] = not v146[v148[3]];
																												elseif (v149 == 67) then
																													local v446 = 0;
																													local v447;
																													local v448;
																													local v449;
																													while true do
																														if (1 == v446) then
																															v449 = nil;
																															while true do
																																if (v447 == 0) then
																																	local v644 = 0;
																																	while true do
																																		if (1 == v644) then
																																			v447 = 1;
																																			break;
																																		end
																																		if (0 == v644) then
																																			v448 = v148[2];
																																			v449 = {};
																																			v644 = 1;
																																		end
																																	end
																																end
																																if (v447 == 1) then
																																	for v667 = 1, #v145 do
																																		local v668 = 0;
																																		local v669;
																																		while true do
																																			if (0 == v668) then
																																				v669 = v145[v667];
																																				for v749 = 0, #v669 do
																																					local v750 = 0;
																																					local v751;
																																					local v752;
																																					local v753;
																																					while true do
																																						if (v750 == 1) then
																																							v753 = v751[3 - 1];
																																							if ((v752 == v146) and (v753 >= v448)) then
																																								local v794 = 0;
																																								local v795;
																																								while true do
																																									if (v794 == 0) then
																																										v795 = 0;
																																										while true do
																																											if (v795 == 0) then
																																												v449[v753] = v752[v753];
																																												v751[1] = v449;
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v750 == 0) then
																																							v751 = v669[v749];
																																							v752 = v751[1];
																																							v750 = 1;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																															break;
																														end
																														if (v446 == 0) then
																															v447 = 0;
																															v448 = nil;
																															v446 = 1;
																														end
																													end
																												else
																													local v450 = 0;
																													local v451;
																													local v452;
																													local v453;
																													while true do
																														if (v450 == 0) then
																															v451 = v148[2];
																															v452 = v146[v451 + 2];
																															v450 = 1;
																														end
																														if (v450 == 1) then
																															v453 = v146[v451] + v452;
																															v146[v451] = v453;
																															v450 = 2;
																														end
																														if (2 == v450) then
																															if (v452 > 0) then
																																if (v453 <= v146[v451 + 1]) then
																																	local v670 = 0;
																																	local v671;
																																	while true do
																																		if (0 == v670) then
																																			v671 = 0;
																																			while true do
																																				if (v671 == 0) then
																																					v140 = v148[3];
																																					v146[v451 + 3] = v453;
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																															elseif (v453 >= v146[v451 + 1]) then
																																local v672 = 0;
																																local v673;
																																while true do
																																	if (v672 == 0) then
																																		v673 = 0;
																																		while true do
																																			if (v673 == 0) then
																																				v140 = v148[3];
																																				v146[v451 + 3] = v453;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																											elseif (v149 <= 102) then
																												if (v149 <= 85) then
																													if (v149 <= (514 - (145 + 293))) then
																														if (v149 <= 72) then
																															if (v149 <= 70) then
																																if (v149 > (499 - (44 + 386))) then
																																	local v304 = 0;
																																	local v305;
																																	local v306;
																																	while true do
																																		if (v304 == 1) then
																																			while true do
																																				if (v305 == 0) then
																																					v306 = v148[2];
																																					v146[v306] = v146[v306](v146[v306 + 1]);
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																		if (v304 == 0) then
																																			v305 = 0;
																																			v306 = nil;
																																			v304 = 1;
																																		end
																																	end
																																else
																																	local v307 = 0;
																																	local v308;
																																	while true do
																																		if (v307 == 0) then
																																			v308 = v148[1488 - (998 + 488)];
																																			do
																																				return v21(v146, v308, v308 + v148[1 + 2]);
																																			end
																																			break;
																																		end
																																	end
																																end
																															elseif (v149 == 71) then
																																local v309 = 0;
																																local v310;
																																local v311;
																																while true do
																																	if (v309 == 0) then
																																		v310 = 0;
																																		v311 = nil;
																																		v309 = 1;
																																	end
																																	if (v309 == 1) then
																																		while true do
																																			if (v310 == 0) then
																																				v311 = v148[2];
																																				v146[v311] = v146[v311](v21(v146, v311 + 1, v148[3]));
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v148[2] == v146[v148[4]]) then
																																v140 = v140 + 1 + 0;
																															else
																																v140 = v148[3];
																															end
																														elseif (v149 <= 74) then
																															if (v149 > (845 - (201 + 571))) then
																																v146[v148[2]] = v146[v148[3]] - v146[v148[4]];
																															else
																																v146[v148[2]]();
																															end
																														elseif (v149 > 75) then
																															local v313 = 0;
																															local v314;
																															while true do
																																if (v313 == 0) then
																																	v314 = v148[2];
																																	v146[v314](v146[v314 + 1]);
																																	break;
																																end
																															end
																														else
																															v146[v148[2]] = v146[v148[3]] % v146[v148[4]];
																														end
																													elseif (v149 <= 80) then
																														if (v149 <= 78) then
																															if (v149 == 77) then
																																v146[v148[2]][v148[3]] = v146[v148[1142 - (116 + 1022)]];
																															elseif (v146[v148[2]] <= v146[v148[4]]) then
																																v140 = v140 + (4 - 3);
																															else
																																v140 = v148[3];
																															end
																														elseif (v149 > 79) then
																															v146[v148[2]] = v146[v148[3]] % v148[4];
																														else
																															local v319 = 0;
																															local v320;
																															local v321;
																															local v322;
																															while true do
																																if (v319 == 1) then
																																	v322 = v148[3];
																																	for v525 = 1, v322 do
																																		v321[v525] = v146[v320 + v525];
																																	end
																																	break;
																																end
																																if (0 == v319) then
																																	v320 = v148[2];
																																	v321 = v146[v320];
																																	v319 = 1;
																																end
																															end
																														end
																													elseif (v149 <= (49 + 33)) then
																														if (v149 > 81) then
																															local v323 = 0;
																															local v324;
																															local v325;
																															local v326;
																															local v327;
																															while true do
																																if (v323 == 2) then
																																	for v528 = v324, v141 do
																																		local v529 = 0;
																																		while true do
																																			if (v529 == 0) then
																																				v327 = v327 + 1;
																																				v146[v528] = v325[v327];
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v323 == 1) then
																																	v141 = (v326 + v324) - 1;
																																	v327 = 0;
																																	v323 = 2;
																																end
																																if (v323 == 0) then
																																	v324 = v148[2];
																																	v325, v326 = v139(v146[v324](v146[v324 + 1]));
																																	v323 = 1;
																																end
																															end
																														else
																															local v328 = 0;
																															local v329;
																															while true do
																																if (v328 == 0) then
																																	v329 = v148[2];
																																	do
																																		return v146[v329](v21(v146, v329 + 1, v148[3]));
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 <= 83) then
																														v146[v148[2]] = v146[v148[3]][v146[v148[4]]];
																													elseif (v149 == 84) then
																														if (v146[v148[2]] < v146[v148[4]]) then
																															v140 = v140 + (3 - 2);
																														else
																															v140 = v148[3];
																														end
																													else
																														v146[v148[2]] = v63[v148[3]];
																													end
																												elseif (v149 <= 93) then
																													if (v149 <= 89) then
																														if (v149 <= 87) then
																															if (v149 > 86) then
																																v146[v148[2]] = {};
																															else
																																v63[v148[3]] = v146[v148[2]];
																															end
																														elseif (v149 > (312 - 224)) then
																															v146[v148[2]] = v146[v148[3]] / v148[4];
																														else
																															local v336 = 0;
																															local v337;
																															while true do
																																if (v336 == 0) then
																																	v337 = v148[2];
																																	v146[v337] = v146[v337]();
																																	break;
																																end
																															end
																														end
																													elseif (v149 <= 91) then
																														if (v149 > 90) then
																															local v338 = 0;
																															local v339;
																															local v340;
																															local v341;
																															while true do
																																if (v338 == 1) then
																																	v341 = v148[862 - (814 + 45)];
																																	for v531 = 1, v341 do
																																		v340[v531] = v146[v339 + v531];
																																	end
																																	break;
																																end
																																if (v338 == 0) then
																																	v339 = v148[2];
																																	v340 = v146[v339];
																																	v338 = 1;
																																end
																															end
																														else
																															local v342 = 0;
																															local v343;
																															local v344;
																															while true do
																																if (v342 == 0) then
																																	v343 = v148[2];
																																	v344 = v146[v343];
																																	v342 = 1;
																																end
																																if (v342 == 1) then
																																	for v534 = v343 + 1, v148[3] do
																																		v15(v344, v146[v534]);
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 > 92) then
																														v146[v148[2]] = v148[3];
																													else
																														v146[v148[4 - 2]] = v146[v148[3]] - v146[v148[4]];
																													end
																												elseif (v149 <= 97) then
																													if (v149 <= 95) then
																														if (v149 == (6 + 88)) then
																															v146[v148[2]] = not v146[v148[3]];
																														else
																															local v349 = 0;
																															local v350;
																															local v351;
																															while true do
																																if (v349 == 0) then
																																	v350 = 0;
																																	v351 = nil;
																																	v349 = 1;
																																end
																																if (v349 == 1) then
																																	while true do
																																		if (v350 == 0) then
																																			v351 = v148[1 + 1];
																																			v146[v351] = v146[v351](v146[v351 + 1]);
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 > 96) then
																														v146[v148[2]] = v148[3];
																													else
																														v146[v148[2]][v146[v148[3]]] = v146[v148[889 - (261 + 624)]];
																													end
																												elseif (v149 <= 99) then
																													if (v149 > 98) then
																														for v420 = v148[2], v148[3] do
																															v146[v420] = nil;
																														end
																													else
																														local v356 = 0;
																														local v357;
																														local v358;
																														local v359;
																														local v360;
																														local v361;
																														while true do
																															if (v356 == 0) then
																																v357 = 0;
																																v358 = nil;
																																v356 = 1;
																															end
																															if (v356 == 2) then
																																v361 = nil;
																																while true do
																																	if (v357 == 0) then
																																		local v588 = 0;
																																		while true do
																																			if (v588 == 0) then
																																				v358 = v148[2];
																																				v359, v360 = v139(v146[v358](v146[v358 + (1 - 0)]));
																																				v588 = 1;
																																			end
																																			if (v588 == 1) then
																																				v357 = 1;
																																				break;
																																			end
																																		end
																																	end
																																	if (v357 == 2) then
																																		for v629 = v358, v141 do
																																			local v630 = 0;
																																			local v631;
																																			while true do
																																				if (v630 == 0) then
																																					v631 = 0;
																																					while true do
																																						if (v631 == 0) then
																																							v361 = v361 + 1;
																																							v146[v629] = v359[v361];
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if (v357 == 1) then
																																		local v589 = 0;
																																		while true do
																																			if (v589 == 0) then
																																				v141 = (v360 + v358) - 1;
																																				v361 = 0;
																																				v589 = 1;
																																			end
																																			if (v589 == 1) then
																																				v357 = 2;
																																				break;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (v356 == 1) then
																																v359 = nil;
																																v360 = nil;
																																v356 = 2;
																															end
																														end
																													end
																												elseif (v149 <= 100) then
																													do
																														return;
																													end
																												elseif (v149 == 101) then
																													v146[v148[2]][v148[3]] = v148[1084 - (1020 + 60)];
																												else
																													local v460 = 0;
																													local v461;
																													local v462;
																													local v463;
																													local v464;
																													while true do
																														if (0 == v460) then
																															v461 = 0;
																															v462 = nil;
																															v460 = 1;
																														end
																														if (v460 == 2) then
																															while true do
																																if (v461 == 0) then
																																	local v645 = 0;
																																	while true do
																																		if (1 == v645) then
																																			v461 = 1;
																																			break;
																																		end
																																		if (v645 == 0) then
																																			v462 = v148[2];
																																			v463 = {v146[v462](v21(v146, v462 + 1, v148[1426 - (630 + 793)]))};
																																			v645 = 1;
																																		end
																																	end
																																end
																																if (v461 == 1) then
																																	v464 = 0;
																																	for v675 = v462, v148[4] do
																																		local v676 = 0;
																																		local v677;
																																		while true do
																																			if (v676 == 0) then
																																				v677 = 0;
																																				while true do
																																					if (v677 == 0) then
																																						v464 = v464 + (3 - 2);
																																						v146[v675] = v463[v464];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																															break;
																														end
																														if (v460 == 1) then
																															v463 = nil;
																															v464 = nil;
																															v460 = 2;
																														end
																													end
																												end
																											elseif (v149 <= 119) then
																												if (v149 <= 110) then
																													if (v149 <= 106) then
																														if (v149 <= 104) then
																															if (v149 > (487 - 384)) then
																																v146[v148[2]] = v64[v148[3]];
																															elseif (v148[2] <= v146[v148[4]]) then
																																v140 = v140 + 1;
																															else
																																v140 = v148[3];
																															end
																														elseif (v149 > 105) then
																															local v364 = 0;
																															local v365;
																															local v366;
																															local v367;
																															local v368;
																															while true do
																																if (v364 == 1) then
																																	v367 = nil;
																																	v368 = nil;
																																	v364 = 2;
																																end
																																if (v364 == 0) then
																																	v365 = 0;
																																	v366 = nil;
																																	v364 = 1;
																																end
																																if (v364 == 2) then
																																	while true do
																																		if (v365 == 0) then
																																			local v590 = 0;
																																			while true do
																																				if (v590 == 1) then
																																					v365 = 1;
																																					break;
																																				end
																																				if (v590 == 0) then
																																					v366 = v148[1 + 1];
																																					v367 = {v146[v366](v146[v366 + 1])};
																																					v590 = 1;
																																				end
																																			end
																																		end
																																		if (v365 == 1) then
																																			v368 = 0;
																																			for v632 = v366, v148[13 - 9] do
																																				local v633 = 0;
																																				local v634;
																																				while true do
																																					if (0 == v633) then
																																						v634 = 0;
																																						while true do
																																							if (v634 == 0) then
																																								v368 = v368 + 1;
																																								v146[v632] = v367[v368];
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														else
																															v146[v148[2]] = v146[v148[3]] % v148[4];
																														end
																													elseif (v149 <= 108) then
																														if (v149 == 107) then
																															v140 = v148[3];
																														else
																															local v371 = 0;
																															local v372;
																															local v373;
																															local v374;
																															while true do
																																if (v371 == 1) then
																																	v374 = 0;
																																	for v535 = v372, v148[4] do
																																		local v536 = 0;
																																		local v537;
																																		while true do
																																			if (0 == v536) then
																																				v537 = 0;
																																				while true do
																																					if (v537 == 0) then
																																						v374 = v374 + (1748 - (760 + 987));
																																						v146[v535] = v373[v374];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (0 == v371) then
																																	v372 = v148[2];
																																	v373 = {v146[v372](v21(v146, v372 + 1, v141))};
																																	v371 = 1;
																																end
																															end
																														end
																													elseif (v149 == 109) then
																														v146[v148[1915 - (1789 + 124)]] = v146[v148[3]] * v146[v148[4]];
																													else
																														v146[v148[2]][v146[v148[3]]] = v148[770 - (745 + 21)];
																													end
																												elseif (v149 <= (40 + 74)) then
																													if (v149 <= 112) then
																														if (v149 > 111) then
																															v146[v148[2]] = v146[v148[3]] * v146[v148[4]];
																														elseif (v146[v148[2]] == v148[4]) then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													elseif (v149 > 113) then
																														local v379 = 0;
																														local v380;
																														local v381;
																														local v382;
																														local v383;
																														while true do
																															if (v379 == 1) then
																																v141 = (v382 + v380) - 1;
																																v383 = 0;
																																v379 = 2;
																															end
																															if (v379 == 2) then
																																for v538 = v380, v141 do
																																	local v539 = 0;
																																	local v540;
																																	while true do
																																		if (v539 == 0) then
																																			v540 = 0;
																																			while true do
																																				if (v540 == 0) then
																																					v383 = v383 + 1;
																																					v146[v538] = v381[v383];
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																															if (0 == v379) then
																																v380 = v148[2];
																																v381, v382 = v139(v146[v380](v21(v146, v380 + 1, v148[3])));
																																v379 = 1;
																															end
																														end
																													else
																														v146[v148[2]] = {};
																													end
																												elseif (v149 <= 116) then
																													if (v149 > 115) then
																														if (v146[v148[2]] ~= v148[4]) then
																															v140 = v140 + (2 - 1);
																														else
																															v140 = v148[3];
																														end
																													elseif (v146[v148[2]] == v146[v148[4]]) then
																														v140 = v140 + 1;
																													else
																														v140 = v148[3];
																													end
																												elseif (v149 <= 117) then
																													v146[v148[2]] = v146[v148[3]] + v148[4];
																												elseif (v149 > 118) then
																													v146[v148[2]] = v146[v148[3]];
																												else
																													local v471 = 0;
																													local v472;
																													local v473;
																													local v474;
																													while true do
																														if (v471 == 0) then
																															v472 = 0;
																															v473 = nil;
																															v471 = 1;
																														end
																														if (v471 == 1) then
																															v474 = nil;
																															while true do
																																if (v472 == 0) then
																																	local v646 = 0;
																																	while true do
																																		if (v646 == 1) then
																																			v472 = 1;
																																			break;
																																		end
																																		if (v646 == 0) then
																																			v473 = v148[3];
																																			v474 = v146[v473];
																																			v646 = 1;
																																		end
																																	end
																																end
																																if (v472 == 1) then
																																	for v679 = v473 + 1, v148[4] do
																																		v474 = v474 .. v146[v679];
																																	end
																																	v146[v148[2]] = v474;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																											elseif (v149 <= 128) then
																												if (v149 <= 123) then
																													if (v149 <= 121) then
																														if (v149 > 120) then
																															local v386 = 0;
																															local v387;
																															local v388;
																															local v389;
																															local v390;
																															local v391;
																															while true do
																																if (v386 == 2) then
																																	for v541 = 1, v388 do
																																		v146[v389 + v541] = v390[v541];
																																	end
																																	v391 = v390[1];
																																	v386 = 3;
																																end
																																if (v386 == 0) then
																																	v387 = v148[2];
																																	v388 = v148[4];
																																	v386 = 1;
																																end
																																if (v386 == 1) then
																																	v389 = v387 + 2;
																																	v390 = {v146[v387](v146[v387 + 1], v146[v389])};
																																	v386 = 2;
																																end
																																if (v386 == 3) then
																																	if v391 then
																																		local v550 = 0;
																																		local v551;
																																		while true do
																																			if (0 == v550) then
																																				v551 = 0;
																																				while true do
																																					if (v551 == 0) then
																																						v146[v389] = v391;
																																						v140 = v148[3];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	else
																																		v140 = v140 + (3 - 2);
																																	end
																																	break;
																																end
																															end
																														else
																															local v392 = 0;
																															local v393;
																															while true do
																																if (v392 == 0) then
																																	v393 = v148[2];
																																	do
																																		return v21(v146, v393, v141);
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 == 122) then
																														if not v146[v148[2]] then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													else
																														local v394 = 0;
																														local v395;
																														local v396;
																														while true do
																															if (v394 == 0) then
																																v395 = 0;
																																v396 = nil;
																																v394 = 1;
																															end
																															if (v394 == 1) then
																																while true do
																																	if (v395 == 0) then
																																		v396 = v148[2];
																																		v146[v396] = v146[v396](v21(v146, v396 + 1, v141));
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																												elseif (v149 <= 125) then
																													if (v149 == 124) then
																														local v397 = 0;
																														local v398;
																														while true do
																															if (v397 == 0) then
																																v398 = v148[2];
																																v146[v398](v21(v146, v398 + 1, v148[3]));
																																break;
																															end
																														end
																													else
																														local v399 = 0;
																														local v400;
																														local v401;
																														local v402;
																														while true do
																															if (v399 == 1) then
																																v402 = nil;
																																while true do
																																	if (v400 == 1) then
																																		v146[v401 + 1] = v402;
																																		v146[v401] = v402[v146[v148[4]]];
																																		break;
																																	end
																																	if (v400 == 0) then
																																		local v596 = 0;
																																		while true do
																																			if (v596 == 0) then
																																				v401 = v148[2];
																																				v402 = v146[v148[3]];
																																				v596 = 1;
																																			end
																																			if (v596 == 1) then
																																				v400 = 1;
																																				break;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (v399 == 0) then
																																v400 = 0;
																																v401 = nil;
																																v399 = 1;
																															end
																														end
																													end
																												elseif (v149 <= (2 + 124)) then
																													local v403 = 0;
																													local v404;
																													local v405;
																													local v406;
																													while true do
																														if (v403 == 1) then
																															v406 = nil;
																															while true do
																																if (v404 == 1) then
																																	v146[v405 + 1] = v406;
																																	v146[v405] = v406[v146[v148[4]]];
																																	break;
																																end
																																if (v404 == 0) then
																																	local v600 = 0;
																																	while true do
																																		if (v600 == 0) then
																																			v405 = v148[2];
																																			v406 = v146[v148[3]];
																																			v600 = 1;
																																		end
																																		if (v600 == 1) then
																																			v404 = 1;
																																			break;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																														if (v403 == 0) then
																															v404 = 0;
																															v405 = nil;
																															v403 = 1;
																														end
																													end
																												elseif (v149 == 127) then
																													v146[v148[2]] = v148[3] ~= (0 + 0);
																												else
																													for v516 = v148[2], v148[1058 - (87 + 968)] do
																														v146[v516] = nil;
																													end
																												end
																											elseif (v149 <= 132) then
																												if (v149 <= 130) then
																													if (v149 == 129) then
																														if (v146[v148[8 - 6]] == v148[4]) then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													else
																														local v407 = 0;
																														local v408;
																														local v409;
																														local v410;
																														local v411;
																														while true do
																															if (2 == v407) then
																																while true do
																																	if (v408 == 1) then
																																		local v601 = 0;
																																		while true do
																																			if (v601 == 0) then
																																				v411 = v146[v409] + v410;
																																				v146[v409] = v411;
																																				v601 = 1;
																																			end
																																			if (v601 == 1) then
																																				v408 = 2;
																																				break;
																																			end
																																		end
																																	end
																																	if (v408 == 2) then
																																		if (v410 > 0) then
																																			if (v411 <= v146[v409 + 1]) then
																																				local v715 = 0;
																																				local v716;
																																				while true do
																																					if (v715 == 0) then
																																						v716 = 0;
																																						while true do
																																							if (0 == v716) then
																																								v140 = v148[3];
																																								v146[v409 + 3] = v411;
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																		elseif (v411 >= v146[v409 + 1]) then
																																			local v717 = 0;
																																			while true do
																																				if (v717 == 0) then
																																					v140 = v148[3 + 0];
																																					v146[v409 + 3] = v411;
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if (v408 == 0) then
																																		local v602 = 0;
																																		while true do
																																			if (v602 == 1) then
																																				v408 = 1;
																																				break;
																																			end
																																			if (v602 == 0) then
																																				v409 = v148[2];
																																				v410 = v146[v409 + 2];
																																				v602 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (v407 == 1) then
																																v410 = nil;
																																v411 = nil;
																																v407 = 2;
																															end
																															if (v407 == 0) then
																																v408 = 0;
																																v409 = nil;
																																v407 = 1;
																															end
																														end
																													end
																												elseif (v149 > (296 - 165)) then
																													if (v146[v148[2]] ~= v146[v148[1417 - (447 + 966)]]) then
																														v140 = v140 + 1;
																													else
																														v140 = v148[3];
																													end
																												else
																													v146[v148[5 - 3]] = v146[v148[3]] / v148[1821 - (1703 + 114)];
																												end
																											elseif (v149 <= 134) then
																												if (v149 == 133) then
																													v146[v148[2]] = v43(v137[v148[3]], nil, v64);
																												elseif (v148[703 - (376 + 325)] <= v146[v148[4]]) then
																													v140 = v140 + 1;
																												else
																													v140 = v148[4 - 1];
																												end
																											elseif (v149 <= 135) then
																												local v414 = 0;
																												local v415;
																												local v416;
																												local v417;
																												while true do
																													if (v414 == 1) then
																														v417 = nil;
																														while true do
																															if (v415 == 1) then
																																for v635 = v416 + 1, v141 do
																																	v15(v417, v146[v635]);
																																end
																																break;
																															end
																															if (0 == v415) then
																																local v603 = 0;
																																while true do
																																	if (v603 == 1) then
																																		v415 = 1;
																																		break;
																																	end
																																	if (v603 == 0) then
																																		v416 = v148[5 - 3];
																																		v417 = v146[v416];
																																		v603 = 1;
																																	end
																																end
																															end
																														end
																														break;
																													end
																													if (v414 == 0) then
																														v415 = 0;
																														v416 = nil;
																														v414 = 1;
																													end
																												end
																											elseif (v149 == 136) then
																												local v480 = 0;
																												local v481;
																												local v482;
																												local v483;
																												local v484;
																												while true do
																													if (v480 == 2) then
																														while true do
																															if (v481 == 0) then
																																local v648 = 0;
																																while true do
																																	if (v648 == 0) then
																																		v482 = v148[2];
																																		v483 = {v146[v482](v21(v146, v482 + 1, v141))};
																																		v648 = 1;
																																	end
																																	if (v648 == 1) then
																																		v481 = 1;
																																		break;
																																	end
																																end
																															end
																															if (v481 == 1) then
																																v484 = 0;
																																for v689 = v482, v148[8 - 4] do
																																	local v690 = 0;
																																	local v691;
																																	while true do
																																		if (v690 == 0) then
																																			v691 = 0;
																																			while true do
																																				if (0 == v691) then
																																					v484 = v484 + 1;
																																					v146[v689] = v483[v484];
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v480 == 0) then
																														v481 = 0;
																														v482 = nil;
																														v480 = 1;
																													end
																													if (v480 == 1) then
																														v483 = nil;
																														v484 = nil;
																														v480 = 2;
																													end
																												end
																											elseif (v148[2] < v146[v148[4]]) then
																												v140 = v140 + (15 - (9 + 5));
																											else
																												v140 = v148[3];
																											end
																											v140 = v140 + 1;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end;
																		end
																	end
																end
																if (v66 == 0) then
																	local v117 = 0;
																	while true do
																		if (v117 == 1) then
																			v66 = 1;
																			break;
																		end
																		if (v117 == 0) then
																			v67 = v62[1];
																			v68 = v62[2];
																			v117 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v65 == 1) then
													v68 = nil;
													v69 = nil;
													v65 = 2;
												end
												if (0 == v65) then
													v66 = 0;
													v67 = nil;
													v65 = 1;
												end
											end
										end
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							v45 = 3;
						end
						if (v45 == 3) then
							if (v31 == 4) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										function v38()
											local v70 = 0;
											local v71;
											local v72;
											local v73;
											local v74;
											local v75;
											local v76;
											while true do
												if (v70 == 2) then
													v75 = v34(v72, 21, 31);
													v76 = ((v34(v72, 32) == 1) and -1) or 1;
													v70 = 3;
												end
												if (v70 == 1) then
													v73 = 1;
													v74 = (v34(v72, 1, 20) * (2 ^ (651 - (555 + 64)))) + v71;
													v70 = 2;
												end
												if (v70 == 0) then
													v71 = v37();
													v72 = v37();
													v70 = 1;
												end
												if (v70 == 3) then
													if (v75 == 0) then
														if (v74 == 0) then
															return v76 * 0;
														else
															local v109 = 0;
															local v110;
															while true do
																if (v109 == 0) then
																	v110 = 0;
																	while true do
																		if (0 == v110) then
																			v75 = 1;
																			v73 = 0;
																			break;
																		end
																	end
																	break;
																end
															end
														end
													elseif (v75 == 2047) then
														return ((v74 == 0) and (v76 * ((932 - (857 + 74)) / 0))) or (v76 * NaN);
													end
													return v16(v76, v75 - 1023) * (v73 + (v74 / (2 ^ 52)));
												end
											end
										end
										v39 = nil;
										v48 = 1;
									end
									if (v48 == 1) then
										function v39(v77)
											local v78 = 0;
											local v79;
											local v80;
											while true do
												if (v78 == 1) then
													v79 = v11(v28, v32, (v32 + v77) - 1);
													v32 = v32 + v77;
													v78 = 2;
												end
												if (v78 == 2) then
													v80 = {};
													for v106 = 1, #v79 do
														v80[v106] = v10(v9(v11(v79, v106, v106)));
													end
													v78 = 3;
												end
												if (v78 == 3) then
													return v14(v80);
												end
												if (v78 == 0) then
													v79 = nil;
													if not v77 then
														local v108 = 0;
														while true do
															if (v108 == 0) then
																v77 = v37();
																if (v77 == 0) then
																	return "";
																end
																break;
															end
														end
													end
													v78 = 1;
												end
											end
										end
										v31 = 5;
										break;
									end
								end
							end
							if (0 == v31) then
								local v49 = 0;
								while true do
									if (v49 == 0) then
										v32 = 1;
										v33 = nil;
										v49 = 1;
									end
									if (v49 == 1) then
										v28 = v12(v11(v28, 5), v7("\248\251", "\176\214\213\134"), function(v81)
											if (v9(v81, 2) == 79) then
												local v95 = 0;
												while true do
													if (v95 == 0) then
														v33 = v8(v11(v81, 1, 1));
														return "";
													end
												end
											else
												local v96 = 0;
												local v97;
												local v98;
												while true do
													if (v96 == 1) then
														while true do
															if (v97 == 0) then
																v98 = v10(v8(v81, 16));
																if v33 then
																	local v118 = 0;
																	local v119;
																	local v120;
																	while true do
																		if (0 == v118) then
																			v119 = 0;
																			v120 = nil;
																			v118 = 1;
																		end
																		if (v118 == 1) then
																			while true do
																				local v150 = 0;
																				while true do
																					if (v150 == 0) then
																						if (0 == v119) then
																							local v159 = 0;
																							while true do
																								if (v159 == 1) then
																									v119 = 1;
																									break;
																								end
																								if (v159 == 0) then
																									v120 = v13(v98, v33);
																									v33 = nil;
																									v159 = 1;
																								end
																							end
																						end
																						if (1 == v119) then
																							return v120;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																else
																	return v98;
																end
																break;
															end
														end
														break;
													end
													if (v96 == 0) then
														v97 = 0;
														v98 = nil;
														v96 = 1;
													end
												end
											end
										end);
										v31 = 1;
										break;
									end
								end
							end
							break;
						end
						if (v45 == 0) then
							if (v31 == 5) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										function v41(...)
											return {...}, v20("#", ...);
										end
										v31 = 6;
										break;
									end
									if (v50 == 0) then
										v40 = v37;
										v41 = nil;
										v50 = 1;
									end
								end
							end
							if (v31 == 2) then
								local v51 = 0;
								while true do
									if (v51 == 0) then
										function v35()
											local v82 = 0;
											local v83;
											while true do
												if (v82 == 1) then
													return v83;
												end
												if (0 == v82) then
													v83 = v9(v28, v32, v32);
													v32 = v32 + 1;
													v82 = 1;
												end
											end
										end
										v36 = nil;
										v51 = 1;
									end
									if (v51 == 1) then
										function v36()
											local v84 = 0;
											local v85;
											local v86;
											while true do
												if (v84 == 0) then
													v85, v86 = v9(v28, v32, v32 + 2);
													v32 = v32 + (4 - 2);
													v84 = 1;
												end
												if (v84 == 1) then
													return (v86 * 256) + v85;
												end
											end
										end
										v31 = 3;
										break;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 1) then
							if (v31 == 1) then
								local v52 = 0;
								while true do
									if (v52 == 1) then
										v35 = nil;
										v31 = 2;
										break;
									end
									if (v52 == 0) then
										v34 = nil;
										function v34(v87, v88, v89)
											if v89 then
												local v99 = 0;
												local v100;
												while true do
													if (v99 == 0) then
														v100 = (v87 / (2 ^ (v88 - (2 - 1)))) % (2 ^ (((v89 - 1) - (v88 - 1)) + 1));
														return v100 - (v100 % 1);
													end
												end
											else
												local v101 = 0;
												local v102;
												local v103;
												while true do
													if (v101 == 0) then
														v102 = 0;
														v103 = nil;
														v101 = 1;
													end
													if (v101 == 1) then
														while true do
															if (v102 == 0) then
																local v111 = 0;
																while true do
																	if (v111 == 0) then
																		v103 = 2 ^ (v88 - 1);
																		return (((v87 % (v103 + v103)) >= v103) and (2 - 1)) or (0 - 0);
																	end
																end
															end
														end
														break;
													end
												end
											end
										end
										v52 = 1;
									end
								end
							end
							if (v31 == 3) then
								local v53 = 0;
								while true do
									if (v53 == 0) then
										v37 = nil;
										function v37()
											local v90 = 0;
											local v91;
											local v92;
											local v93;
											local v94;
											while true do
												if (v90 == 0) then
													v91, v92, v93, v94 = v9(v28, v32, v32 + 3);
													v32 = v32 + 4;
													v90 = 1;
												end
												if (v90 == 1) then
													return (v94 * 16777216) + (v93 * 65536) + (v92 * 256) + v91;
												end
											end
										end
										v53 = 1;
									end
									if (1 == v53) then
										v38 = nil;
										v31 = 4;
										break;
									end
								end
							end
							v45 = 2;
						end
					end
				end
				break;
			end
		end
	end
	vv17(), ...);
end
